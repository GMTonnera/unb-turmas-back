// This is your Prisma schema file,
// learn more about it in the docs: https://pris.ly/d/prisma-schema

// Looking for ways to speed up your queries, or scale easily with your serverless or edge functions?
// Try Prisma Accelerate: https://pris.ly/cli/accelerate-init

generator client {
  provider = "prisma-client-js"
}

datasource db {
  provider = "postgresql"
  url      = env("DATABASE_URL")
}

model User {
  id Int @id @default(autoincrement())
  name String
  nickname String
  email String @unique
  course String
  password String
  adm Boolean
  createdAt DateTime @default(now())
  updatedAt DateTime @updatedAt

  assessments Assessment[]
}

model Assessment {
  id Int @id @default(autoincrement())
  description String
  disciplineDificult Int
  teacherGrade Int
  adm Boolean
  classId Int
  userId Int
  createdAt DateTime @default(now())
  updatedAt DateTime @updatedAt

  user User @relation(fields: [userId], references: [id])
  class Class @relation(fields: [classId], references: [id])
}

model Class {
  id Int @id @default(autoincrement())
  semester String
  time String
  place String
  teacherId Int
  disciplineId Int
  createdAt DateTime @default(now())
  updatedAt DateTime @updatedAt

  assessments Assessment[]
  professor Teacher @relation(fields: [teacherId], references: [id])
  discipline Discipline @relation(fields: [disciplineId], references: [id])
}

model Teacher {
  id Int @id @default(autoincrement())
  name String
  departmentId Int
  createdAt DateTime @default(now())
  updatedAt DateTime @updatedAt

  classes Class[]
  department Department @relation(fields: [departmentId], references: [id])
}

model Discipline {
  id Int @id @default(autoincrement())
  code String @unique
  name String @unique
  departmentId Int
  createdAt DateTime @default(now())
  updatedAt DateTime @updatedAt

  classes Class[]
  department Department @relation(fields: [departmentId], references: [id])
}

model Department {
  id Int @id @default(autoincrement())
  code String @unique
  name String @unique

  disciplines Discipline[]
  teachers Teacher[]
}